#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys
import cmd

from dnp3 import Master, Logger


class MasterCli(cmd.Cmd):
    def __init__(self, host: str, port: int) -> None:
        super().__init__()

        self._logger = Logger("CLI")

        self._logger.log("Creating Master")
        self._master = Master(host=host, port=port)

    def do_operate(self, line: str) -> None:
        """
        Direct operate on the server.

        Usage: operate [ group ] [ index ] [ value ]
        """
        args = line.split(' ')

        if len(args) != 3:
            self._logger.error("Bad arguments")
            return

        group = int(args[0])
        index = int(args[1])
        value = args[2]

        self._master.operate(group, index, value)
        self._logger.log("Cmd success")

    def do_scan(self, line: str) -> None:
        """
        Do a range scan on the server.

        Usage: operate [ group ] [ variation ] [ index ] [ count ]
        """
        args = line.split(' ')

        if len(args) != 4:
            self._logger.error("Bad arguments")
            return

        group = int(args[0])
        variation = int(args[1])
        index = int(args[2])
        count = int(args[3])

        self._master.scan(group, variation, index, count)
        self._logger.log("Cmd success")

    def do_exit(self) -> None:
        """Exit."""
        self._logger.log("Shutdown Node")
        self._master.shutdown()
        self._logger.log("Bye")
        sys.exit()

    def __del__(self):
        self._logger.log("Shutdown Node")
        self._master.shutdown()
        self._logger.log("Bye")


def main() -> None:
    logger = Logger("MAIN")

    # Parse arguments
    if len(sys.argv) != 3:
        logger.error("Bad arguments")
        sys.exit()
    else:
        host = sys.argv[1]
        port = int(sys.argv[2])

    MasterCli(host, port).cmdloop()


    sys.exit()


if __name__ == "__main__":
    main()
